from turtle import color
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("tmdb-movies.csv")
print("Here is some data ****************** \n") 
print(df.head())
print("Here is The shape ****************** \n")
print( df.shape)
print("Here is Summary statistics ****************** \n" )
print(df.describe() )
print("Here is some informations ****************** \n" )
print(df.info())
df.hist(figsize=(20, 10))
plt.show()
print("**************************")
most_popular_production_company = df["production_companies"].mode()
print("The most popular production company is {}".format(most_popular_production_company))

d3 = df["cast"].mode()
print("the actor with most appearences is {}".format(d3))

y = df["genres"].mode()
print(print("the genre with most productions is {}".format(y)))

z = df["director"].mode()
print("the dicrector with most appearences is {}".format(z))

d = df["runtime"].mean()
print("the average run time for all movies is {}".format(d))

d2 = df["runtime"].mode()
print("the most movies are in runtime of {}".format(d2))

h = df.groupby("genres").popularity.mean()
print("the avearge popularity for each genre is ")
print(h)

h2 = df.groupby("genres").revenue_adj.mean()
print("the avearge revenue for each genre is -accounting for inflation over time- ")
print(h2)

h3 = df.groupby("genres").budget_adj.mean()
print("the avearge budget for each genre is -accounting for inflation over time- ")
print(h3)

h4 = df.groupby("genres").vote_average.sum()
print("the avearge votes for each genre is ")
print(h4)

r = df.groupby("release_year").genres.value_counts()
print("the amonts of genres for each year is ")
print(r)

dir = df.groupby("director").revenue_adj.sum()
print ("The revenue generated by each director is ")
print(dir)

dir2 = df.groupby("director").budget_adj.sum()
print ("The budget spent by each director is ")
print(dir2)


df["imdb_id"].fillna("not known", inplace=True)
df["cast"].fillna("not known", inplace=True)
df["homepage"].fillna("no homepage", inplace=True)
df["director"].fillna("not known", inplace=True)
df["tagline"].fillna("nopopular tagas", inplace=True)
df["keywords"].fillna("not known", inplace=True)
df["overview"].fillna("not supported", inplace=True)
df["genres"].fillna("could be any", inplace=True)
df["production_companies"].fillna("no production companies", inplace=True)
df["release_date"]=pd.to_datetime(df["release_date"])
def splited_data(x):
    d_split = df[x].str.cat(sep = '|')
    d = pd.Series(d_split.split('|'))
    stats = d.value_counts(ascending=False)
    return stats

print(df.info())



most_popular_production_company = df["production_companies"].mode()
print("The most popular production company is {}".format(most_popular_production_company))

d3 = df["cast"].mode()
print("the actor with most appearences is {}".format(d3))



z = df["director"].mode()
print("the dicrector with most appearences is {}".format(z))

d = df["runtime"].mean()
print("the average run time for all movies is {}".format(d))

d2 = df["runtime"].mode()
print("the most movies are in runtime of {}".format(d2))

df["release_year"].hist(alpha=0.8, bins=10, label="release_year")
plt.show()



movies=df.groupby("release_year").count()
movies.plot(xticks = np.arange(1960,2015,10))
sns.set(rc={"figure.figsize":(20,10)})
plt.title("Number of movies in years",fontsize = 16)
plt.xlabel("Release year",fontsize = 14)
plt.ylabel("Number Of movies",fontsize = 14)
sns.set_style("darkgrid")
plt.show()

total_genres = splited_data("genres")
print(total_genres)   

c = ['red', 'yellow', 'black', 'blue', 'orange','Cyan','Magenta','red', 'yellow', 'black', 'blue', 'orange','Cyan','Magenta','red', 'yellow', 'black', 'blue', 'orange','Cyan','Magenta']
total_genres.plot(kind= 'bar',figsize = (20,10),fontsize=14,color=c)
plt.title("Most produced Genres",fontsize=16)
plt.xlabel("Number Of Movies",fontsize=14)
plt.ylabel("Genres",fontsize= 14)
plt.legend()
plt.show()

actors = splited_data("cast")

actors.iloc[:20].plot.bar(figsize=(20,10),fontsize=14,color=['black','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta','Magenta' ])

plt.title("The Actor with most appearences",fontsize=16)
plt.xticks(rotation = 70)
plt.xlabel("Actor",fontsize=14)
plt.ylabel("Movies",fontsize= 14)
sns.set_style("darkgrid")
plt.show()

def min_max(x):
    min_index = df[x].idxmin()
    high_index = df[x].idxmax()
    high = pd.DataFrame(df.loc[high_index,:])
    low = pd.DataFrame(df.loc[min_index,:])
    
    print("Movie Which Has Highest "+ x + " : ",df["original_title"][high_index])
    print("Movie Which Has Lowest "+ x + "  : ",df["original_title"][min_index])
    return pd.concat([high,low],axis = 1)
min_max("revenue")

df["budget"] = df["budget"].replace(0,np.NAN)
min_max("budget")

df.groupby("runtime")["popularity"].mean().plot(figsize = (20,10),xticks=np.arange(0,1000,100))


plt.title("Popularity in terms of runtime",fontsize = 14)
plt.xlabel("Runtime",fontsize = 13)
plt.ylabel("Average Popularity",fontsize = 13)
sns.set(rc={"figure.figsize":(20,10)})
sns.set_style("darkgrid")
plt.show()
